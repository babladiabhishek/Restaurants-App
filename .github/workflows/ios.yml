name: iOS Starter Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7' # Specify the Ruby version your project uses

      - name: Cache Bundler
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundle-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundle-

      - name: Install Dependencies
        run: |
          bundle install
          if [ -f "Podfile" ]; then
            bundle exec pod install
          fi

      - name: Set Default Scheme
        id: set-default-scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default_scheme=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default_scheme > default_scheme
          echo "Using default scheme: $default_scheme"
          echo "::set-output name=default_scheme::$default_scheme"

      - name: Run Fastlane Build
        env:
          DEFAULT_SCHEME: ${{ steps.set-default-scheme.outputs.default_scheme }}
        run: |
          bundle exec fastlane build scheme:$DEFAULT_SCHEME

      - name: Run Fastlane Tests
        env:
          DEFAULT_SCHEME: ${{ steps.set-default-scheme.outputs.default_scheme }}
        run: |
          bundle exec fastlane test scheme:$DEFAULT_SCHEME

      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: /Users/runner/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
