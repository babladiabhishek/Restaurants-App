name: iOS Starter Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test iOS App
    runs-on: macos-latest
    env:
      SCHEME_FILE: default
      PLATFORM: iOS Simulator

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set Default Scheme
        id: set-default-scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default_scheme=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default_scheme > ${{ env.SCHEME_FILE }}
          echo "Using default scheme: $default_scheme"
          echo "::set-output name=default_scheme::$default_scheme"

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Dependencies
        run: |
          if [ -f "Podfile" ]; then
            bundle install
            bundle exec pod install
          fi

      - name: Build
        run: |
          default_scheme=$(cat ${{ env.SCHEME_FILE }})
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          file_to_build=$(ls -1 | grep -i -E '\.xcworkspace$|\.xcodeproj$' | head -1)
          filetype_parameter=$(echo $file_to_build | grep -iq '\.xcworkspace$' && echo "workspace" || echo "project")
          xcodebuild build-for-testing -scheme "$default_scheme" -$filetype_parameter "$file_to_build" -destination "platform=${{ env.PLATFORM }},name=$device"

      - name: Test
        run: |
          default_scheme=$(cat ${{ env.SCHEME_FILE }})
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          file_to_build=$(ls -1 | grep -i -E '\.xcworkspace$|\.xcodeproj$' | head -1)
          filetype_parameter=$(echo $file_to_build | grep -iq '\.xcworkspace$' && echo "workspace" || echo "project")
          xcodebuild test-without-building -scheme "$default_scheme" -$filetype_parameter "$file_to_build" -destination "platform=${{ env.PLATFORM }},name=$device"
